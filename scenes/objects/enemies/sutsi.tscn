[gd_scene load_steps=12 format=3 uid="uid://km08inj7xc22"]

[ext_resource type="Texture2D" uid="uid://dxesvfnjybpki" path="res://sprites/enemies/sutsi.png" id="2_q2aux"]

[sub_resource type="GDScript" id="GDScript_4n32e"]
script/source = "extends Enemy_Template

@onready var projectile

const SPEED = 40.0
const CHARGESPEED = 100.0
const REACTIONTIME = 30
var state : int = 0
var dir : float

func _ready():
	basedmg()
	Cur_HP = 6
	velocity.x = -scale.x * SPEED

func _physics_process(_delta):
	if Cur_HP <= 0:
		projectile = preload(\"res://scenes/objects/explosion_1.tscn\").instantiate()
		get_parent().add_child(projectile)
		projectile.position.x = position.x
		projectile.position.y = position.y
		print(\"yeouch!\")
		if GameState.droptimer < 3:
			projectile = preload(\"res://scenes/objects/items/pickup.tscn\").instantiate()
			get_parent().add_child(projectile)
			projectile.position.x = position.x
			projectile.position.y = position.y
			projectile.dropped = true
		queue_free()
		
	if Cur_Inv > 0:
		Cur_Inv -= 1
		if Cur_Inv % 2 == 0:
			$Sprite.visible = false
			print(\"disappear!\")
		
		else:
			$Sprite.visible = true
			print(\"appear!\")
	else:
		$Sprite.visible = true
		
	if blown == false:
		if state == 0:
			if GameState.player != null:
				if position.x < abs(GameState.player.position.x) + 100 and position.x > abs(GameState.player.position.x) - 100:
					$Sprite.play(\"see\")
					state = 1
		if state > 0 && state < REACTIONTIME:
			state += 1
			velocity.x = 0
		if state == REACTIONTIME:
			$Sprite.play(\"charge\")
			if GameState.player != null:
				$Pointer.look_at(GameState.player.position)
				velocity.x = cos($Pointer.rotation) * CHARGESPEED * scale.x
				velocity.y = sin($Pointer.rotation) * CHARGESPEED
				state += 1
				if velocity.x > 0:
					scale.x = -1
				else:
					scale.x = 1
				
		move_and_slide()


func _on_visible_on_screen_notifier_2d_screen_exited():
	queue_free()

func _on_hitable_body_entered(weapon): # needs to be redefined because damage values
	#Check for I-Frames or multihit
	if Cur_Inv <= 0 or (weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI or GameState.DMGTYPE.CB_REAPER_1 or GameState.DMGTYPE.CB_REAPER_2 or GameState.DMGTYPE.MD_GUERILLA):
		#Does it do 0 damage?
		if Dmg_Vals[weapon.W_Type] == 0:
			#For these, have the projectile dissipate.
			if (weapon.W_Type == GameState.DMGTYPE.BS_SHARK or GameState.DMGTYPE.CR_SHARK1 or GameState.DMGTYPE.CR_SHARK2):
				weapon.destroy()
			#For all others, the projectile bounces off. Plink!
			else:
				weapon.reflect()
		#Cool, it does damage!!
		else:
			if state > REACTIONTIME:
				if weapon.is_in_group(\"scorch\"):
					velocity.x *= 0.3
					velocity.y *= 0.3
				else:
					velocity.x *= 0.9
					velocity.y *= 0.9
			#Is it Scorch Barrier?
			if weapon.is_in_group(\"scorch\"):
				#For most characters, reduce durability by...
				if GameState.character_selected != 2:
					weapon.durability -= 1
				#Copy robot isn't so lucky...
				else:
					weapon.durability -= 2
			#Look up the damage type and do damage according to it.
			Cur_HP -= Dmg_Vals[weapon.W_Type]
			Cur_Inv = 2
			#If the enemy is killed by Wild Gale, let em get blown away!
			if Cur_HP <= 0 and weapon.W_Type == GameState.DMGTYPE.CB_GALE:
				Cur_HP = 999
				blown = true
			
			#If the projectile kills, or are the below weapons on hit, go to the kill state!
			if Cur_HP <= 0 or (weapon.W_Type == GameState.DMGTYPE.CR_SHARK1 or GameState.DMGTYPE.CR_SHARK2 or GameState.DMGTYPE.BS_SHARK):
				weapon.kill()
			else:
				#If neither of these conditions are met, whatever!
				weapon.destroy()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wjvmq"]
size = Vector2(32, 16)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wsdxd"]
size = Vector2(32, 16)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wstdr"]
size = Vector2(32, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_beai4"]
atlas = ExtResource("2_q2aux")
region = Rect2(64, 0, 32, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_kjtd1"]
atlas = ExtResource("2_q2aux")
region = Rect2(64, 16, 32, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_gl8sv"]
atlas = ExtResource("2_q2aux")
region = Rect2(0, 0, 32, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_g8cbt"]
atlas = ExtResource("2_q2aux")
region = Rect2(0, 16, 32, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_ydit3"]
atlas = ExtResource("2_q2aux")
region = Rect2(32, 16, 32, 16)

[sub_resource type="SpriteFrames" id="SpriteFrames_4jmi0"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_beai4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kjtd1")
}],
"loop": true,
"name": &"charge",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_gl8sv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g8cbt")
}],
"loop": true,
"name": &"lazy",
"speed": 4.0
}, {
"frames": [{
"duration": 2.0,
"texture": SubResource("AtlasTexture_ydit3")
}],
"loop": true,
"name": &"see",
"speed": 10.0
}]

[node name="Sutsi" type="CharacterBody2D"]
collision_layer = 0
collision_mask = 0
script = SubResource("GDScript_4n32e")

[node name="Collision" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_wjvmq")
debug_color = Color(0, 1, 0.0705882, 0.419608)

[node name="hitable" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 8

[node name="MainHitbox" type="CollisionShape2D" parent="hitable"]
shape = SubResource("RectangleShape2D_wsdxd")

[node name="hurt" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="MainHitbox" type="CollisionShape2D" parent="hurt"]
shape = SubResource("RectangleShape2D_wstdr")
debug_color = Color(1, 0.00392157, 0.0705882, 0.419608)

[node name="VisibleOnScreenEnabler2D" type="VisibleOnScreenEnabler2D" parent="."]
position = Vector2(-1.72853e-06, 4.17233e-07)
scale = Vector2(1.6, 0.8)

[node name="Sprite" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_4jmi0")
animation = &"lazy"
autoplay = "lazy"
frame_progress = 0.213892

[node name="Pointer" type="Node2D" parent="."]

[node name="VisibleOnScreenNotifier2D" type="VisibleOnScreenNotifier2D" parent="."]
position = Vector2(2.84217e-14, 0)
scale = Vector2(2.2, 1.25)

[connection signal="body_entered" from="hitable" to="." method="_on_hitable_body_entered"]
[connection signal="body_entered" from="hurt" to="." method="_on_hurt_body_entered"]
[connection signal="screen_exited" from="VisibleOnScreenNotifier2D" to="." method="_on_visible_on_screen_notifier_2d_screen_exited"]
