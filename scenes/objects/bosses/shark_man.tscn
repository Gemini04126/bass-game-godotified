[gd_scene load_steps=101 format=3 uid="uid://ckdeuge1iatm5"]

[ext_resource type="Shader" uid="uid://b3xb8j1icuyp" path="res://shaders/PaletteSwap.gdshader" id="1_xo4wh"]
[ext_resource type="Texture2D" uid="uid://2jtqdlu4xtk5" path="res://sprites/hud/bossbarpals/shark.png" id="2_l2mpc"]
[ext_resource type="AudioStream" uid="uid://ctstbffrq85ky" path="res://audio/sfx/bar_fill.wav" id="3_5nqm8"]
[ext_resource type="Texture2D" uid="uid://xwoub3th7bmx" path="res://sprites/enemies/bosses/shark_man.png" id="3_l2mpc"]
[ext_resource type="Resource" uid="uid://ntb86y0ejew7" path="res://dialogue/prebattle_shark.dialogue" id="3_nbslf"]
[ext_resource type="AudioStream" uid="uid://cojuek45oo3hj" path="res://audio/sfx/player_hurt.wav" id="4_jw8de"]
[ext_resource type="AudioStream" uid="uid://dix6rlhdr84oa" path="res://audio/sfx/mega_death.wav" id="5_8obg6"]
[ext_resource type="AudioStream" uid="uid://lap56ylqg4a6" path="res://audio/sfx/scythe2.wav" id="7_5nqm8"]
[ext_resource type="AudioStream" uid="uid://bu17jfenhhtt8" path="res://audio/sfx/explode.wav" id="7_jw8de"]
[ext_resource type="AudioStream" uid="uid://3orgt2y566i3" path="res://audio/sfx/rm_step.wav" id="9_8obg6"]
[ext_resource type="AudioStream" uid="uid://dbqhptn2q0uk3" path="res://audio/sfx/shark_g1.wav" id="10_u7p8t"]
[ext_resource type="AudioStream" uid="uid://dwyvbh6cxvbmk" path="res://audio/sfx/shark_g2.wav" id="11_kwo4k"]
[ext_resource type="AudioStream" uid="uid://bjcjfg1xjw465" path="res://audio/sfx/shark_g3.wav" id="12_nbslf"]
[ext_resource type="AudioStream" uid="uid://q2a82o1m28d8" path="res://audio/sfx/shark_g4.wav" id="13_kg6rs"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gtk0d"]
shader = ExtResource("1_xo4wh")
shader_parameter/skip_first_row = true
shader_parameter/use_palette_alpha = false
shader_parameter/fps = 6.0

[sub_resource type="GDScript" id="GDScript_k5bra"]
script/source = "extends CharacterBody2D

class_name Shark_Man
var fullintro : bool
@onready var projectile
@export var slot : int
@export var barPalette : CompressedTexture2D
@export var prebattle: DialogueResource
var geese : bool = false
var Dmg_Vals : Array[float]
var Inv_Vals : Array[float]
var Atk_Dmg = 4
var flash : bool
var exploded : bool
var Max_HP = 56
var Cur_HP = 0
var blown : bool = false
var quickhits
var state
var track2hits : int
var deadtick
var bossesleft

var statetimer : int = 0
var attacks
var attackpick = 0

var lastattack = 0
var floating : bool = false
var jumping : bool = false


var timer : int = 0
var freq = 0.03
var amplitude = 0.15
var v = Vector2(0, 25)

enum STATES
{
	SPAWN,
	PREBATTLE,
	INTRO,
	IDLE,
	ATTACK1,
	ATTACK2,
	ATTACK3,
	ATTACK4,
	ATTACK5,
	DEAD,
	WEAKNESS
}

const EXPLOSION_SPEEDS : Array[Vector2] = [ #G: Hey look, I can actually pretty much just copy what I had for the Genesis version...
# G (but from the Genesis): okay this kind of makes no sense but it also works to help visualize the orbs
								Vector2(0, -150),
		Vector2(-100, -100),						Vector2(100, -100),
								Vector2(0, -50),
	Vector2(-150, 0),	Vector2(-50, 0),	Vector2(50, 0),	Vector2(150, 0),
								Vector2(0, 50),
		Vector2(-100, 100),							Vector2(100, 100),
								Vector2(0, 150)
]

func basedmg():
	#region Damage
	Dmg_Vals.resize(GameState.DMGTYPE.size())
	Dmg_Vals[GameState.DMGTYPE.CB_SMOG] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_1] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_2] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_GALE] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_GUERILLA] = 0.25
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_1] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_2] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_3] = 5
	
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK1] = 3
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK2] = 8
	Dmg_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_PUNK] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BALLADE] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT1] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT2] = 1
	
	Dmg_Vals[GameState.DMGTYPE.BS_BUSTER] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_SHARK] = 4
	Dmg_Vals[GameState.DMGTYPE.BS_TREBLE] = 1
	
	Dmg_Vals[GameState.DMGTYPE.MD_BLAZE] = 3
	Dmg_Vals[GameState.DMGTYPE.MD_VIDEO] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 3
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 1
	
	Dmg_Vals[GameState.DMGTYPE.RA_BUSTER] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_GALAXY] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_TOP] = 3
	Dmg_Vals[GameState.DMGTYPE.RA_GEMINI] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_GRENADE] = 0.5
	Dmg_Vals[GameState.DMGTYPE.RA_YAMATO] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_MAGMA] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MAGMA2] = 3
	Dmg_Vals[GameState.DMGTYPE.RA_PHARAOH] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_CHILL] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_CHILL2] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_WIRE] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_TERRA] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MERCURY] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MARS] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_PLUTO] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_ROSE] = 2 # Maybe?
	#endregion
	#region Invul
	Inv_Vals.resize(GameState.DMGTYPE.size())
	Inv_Vals[GameState.DMGTYPE.CB_SMOG] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GALE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GUERILLA] = 0.01
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_3] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BLAZE] = 0.45
	Inv_Vals[GameState.DMGTYPE.CR_SHARK1] = 1
	Inv_Vals[GameState.DMGTYPE.CR_SHARK2] = 2
	Inv_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Inv_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Inv_Vals[GameState.DMGTYPE.CR_PUNK] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BALLADE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT2] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.BS_BUSTER] = 0.35
	Inv_Vals[GameState.DMGTYPE.BS_BLAZE] = 0.35
	Inv_Vals[GameState.DMGTYPE.BS_SHARK] = 1
	Inv_Vals[GameState.DMGTYPE.BS_TREBLE] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.MD_BLAZE] = 1
	Inv_Vals[GameState.DMGTYPE.MD_VIDEO] = 0.75
	Inv_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 0
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA] = 0.65
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 0.65
	
	Inv_Vals[GameState.DMGTYPE.RA_BUSTER] = 0.25
	Inv_Vals[GameState.DMGTYPE.RA_GALAXY] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_TOP] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_GEMINI] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_GRENADE] = 0.15
	Inv_Vals[GameState.DMGTYPE.RA_YAMATO] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MAGMA] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_MAGMA2] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_PHARAOH] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_CHILL] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_CHILL2] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_WIRE] = 0 # it would be really funny to do this
	Inv_Vals[GameState.DMGTYPE.RA_TERRA] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MERCURY] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MARS] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_PLUTO] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_ROSE] = 0.75 # Maybe?
	#endregion

func _ready():
	basedmg()

func turntoplayer():
		if GameState.player.position.x < position.x:
			$Sprite.scale.x = 1
		else:
			$Sprite.scale.x = -1

func _physics_process(_delta):
	
	if GameState.freezeframe == false:
	
		if !is_on_floor() and floating == false:
			if Cur_HP > 0:
				if Cur_HP <= 28:
					velocity.y += 15
				else:
					velocity.y += 9
					
		if is_on_floor() and jumping == false:
			velocity.x *= 0.4
			
		if !is_on_floor() and jumping == true:
			if velocity.y < 0:
				$Sprite2.play(\"jump1\")
			if velocity.y > -80:
				$Sprite2.play(\"jump2\")
			if velocity.y > 80:
				$Sprite2.play(\"jump3\")
			if velocity.y > 100:
				$Sprite2.play(\"jump4\")
			
				
		$Overlay.scale.x = $Sprite.scale.x
		$Sprite2.scale.x = $Sprite.scale.x
			
		if Input.is_action_pressed(\"jump\"):
			attackpick += 1
		
		move_and_slide()
		
		if attackpick < 6:
			attackpick += 1
		else:
			attackpick = 0 
		
		if state == null:
			if fullintro == true:
				state = STATES.PREBATTLE
			else:
				$Sprite2.play(\"jump4\")
				velocity.y = 80
				if is_on_floor():
					state = STATES.INTRO
					$Sprite2.play(\"crouch\")
					$Sprite.play(\"Intro\")
				
		if state == STATES.PREBATTLE:
			print(position.x)
			if statetimer == 0:
				statetimer += 1
				$Collision.disabled = true
				$Sprite.z_index = -2
				$Sprite2.z_index = -2
				$Sprite.play(\"Intro1\")
				velocity.x = -190
				position.x = (384*GameState.scrollX1) + 340
				position.y = (224*GameState.scrollY1) + 108
			if statetimer == 1 and position.x < (384*GameState.scrollX1) + 40:
				statetimer += 1
				turntoplayer()
				$Sprite.play(\"Intro2\")
				position.x = (384*GameState.scrollX1) + 40
				position.y += 18
				velocity.x = 210
			if statetimer == 2  and position.x > (384*GameState.scrollX1) + 370:
				statetimer += 1
				$Sprite.play(\"Float\")
				$Sprite2.play(\"jump2\")
				turntoplayer()
				velocity.x = -90
			if statetimer == 3  and position.x < (384*GameState.scrollX1) + 280 and velocity.x != 0:
				$Sprite.z_index = 0
				$Sprite2.z_index = 0
				velocity.x *= 0.92
				
			if statetimer == 3 and position.x < (384*GameState.scrollX1) + 280 and velocity.x > -1:
				DialogueManager.show_dialogue_balloon(prebattle)
				GameState.dialogue_open = true
				velocity.x = 0
				statetimer += 1
				
				
			if statetimer == 4 and GameState.dialogue_open == false:
				statetimer += 1
				$Collision.disabled = false
				$Sprite.play(\"Jump\")
				$Sprite2.play(\"jump4\")
				velocity.y = 80
				
			if statetimer == 3 or statetimer == 4:
				timer += 1
				v.y = (cos(timer * freq) * amplitude)
				position.y += v.y
				
			if statetimer == 5:
				if is_on_floor():
					state = STATES.INTRO
					$Sprite2.play(\"crouch\")
					$Sprite.play(\"Intro\")
				
				
		if state == STATES.WEAKNESS:
			if statetimer == 0:
				$Sprite.play(\"Dead\")
			if statetimer <= 8:
				statetimer += 1
			if statetimer == 8:
				velocity.y = -650
			if statetimer == 9:
				if $CeilingDetector.is_colliding():
					statetimer += 1
					Cur_HP -= 5
					$Audio/Damage.play()
					$InvulTimer.start(5)
			if statetimer > 9:
				statetimer += 1
					
			if statetimer >= 27:
				if is_on_floor():
					state = STATES.IDLE
					jumping = false
					
				
		if state == STATES.INTRO:
			if $Sprite.frame == 3:
				if Cur_HP == Max_HP:
					if Input.is_action_pressed(\"dash\") and Input.is_action_pressed(\"jump\") and Input.is_action_pressed(\"move_left\") and GameState.current_hp >= 28:
						geese = true
					$Sprite2.play(\"none\")
					state = STATES.IDLE
					statetimer = 50
				else:
					Cur_HP += 1
					$Audio/HPFill.play()
				
		if state == STATES.IDLE:
			turntoplayer()
			if GameState.current_hp <= 0:
				$Sprite.play(\"Victory\")
				statetimer = 9500
			else:
				$Sprite2.play(\"none\")
				$Sprite.play(\"Idle\")
				statetimer -= 1
			if statetimer <= 0:
				if attackpick < 2 and lastattack != 1:
					if GameState.droptimer > 3 and Cur_HP <= 28:
						attacks = 4
					elif GameState.droptimer > 3 or Cur_HP <= 28:
						attacks = 3
					else:
						attacks = 2
					state = STATES.ATTACK1
					$Sprite.play(\"FinShredder\")
					$Overlay.play(\"FinShredder\")
					$Sprite2.play(\"shredder\")
					$Sprite2.set_frame_and_progress(0,0)
				
				elif (attackpick == 2 or (attackpick == 6 and (GameState.player.position.x < position.x + 200 or GameState.player.position.x > position.x - 200))) and lastattack != 2:
					state = STATES.ATTACK2
					$Sprite.play(\"Crouch\")
					$Sprite2.play(\"crouch\")
					
				elif (attackpick == 3 or (attackpick == 6 and (GameState.player.position.x > position.x + 200 or GameState.player.position.x < position.x - 200))) and lastattack != 3:
					state = STATES.ATTACK3
					if geese == true:
						$Audio/DoubleReppuken.play()
					$Sprite.play(\"FinShredder\")
					$Overlay.play(\"FinShredder\")
					$Sprite2.play(\"shredder\")
					$Sprite2.set_frame_and_progress(0,0)
					
				elif (attackpick == 4) and lastattack != 4:
					state = STATES.ATTACK4
					$Sprite.play(\"Crouch\")
					$Sprite2.play(\"crouch\")
					
				elif (attackpick == 5) and lastattack != 5 and GameState.difficulty > 1:
					state = STATES.ATTACK5
					$Sprite.play(\"FinShredder\")
					$Overlay.play(\"FinShredder\")
					$Sprite2.play(\"shredder\")
					$Sprite2.set_frame_and_progress(0,0)
			
		if state == STATES.ATTACK1: ##FIN SHREDDER
			statetimer += 1
			lastattack = 1
			if (statetimer < 10 or statetimer > 65):
				turntoplayer()
				
			if statetimer == 10:
				if geese == true:
					$Audio/Reppuken.play()
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * 9)
				projectile.position.y = position.y - 20
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -210
			if statetimer == 80 or (statetimer == 70 and Cur_HP <= 28):
				attacks -= 1
				if attacks == 0 or GameState.current_hp == 0:
					state = STATES.IDLE
				else:
					statetimer = 0
					$Sprite.play(\"FinShredder\")
					$Overlay.play(\"FinShredder\")
					$Sprite2.play(\"shredder\")
					
					if Cur_HP <= 28 and GameState.droptimer == 3:
						$Sprite.play(\"Crouch\")
						$Sprite2.play(\"crouch\")
						state = STATES.ATTACK2
					if Cur_HP <= 28 and GameState.droptimer == 4:
						state = STATES.ATTACK3
				
		if state == STATES.ATTACK2: #RAGING STORM
			
			statetimer += 1
			if statetimer < 10:
				turntoplayer()
			lastattack = 2
			if statetimer == 10:
				jumping = true
				$Sprite.play(\"Jump\")
				$Overlay.play(\"Jump\")
				velocity.x = (position.x - GameState.player.position.x) * -1
				velocity.y = -280
				if Cur_HP <= 28:
					velocity.x = (position.x - GameState.player.position.x) * -0.995
					velocity.y = -365
			if statetimer > 15 and  statetimer < 2000 and is_on_floor():
				$Sprite.play(\"RagingStorm\")
				$Overlay.play(\"RagingStorm\")
				$Sprite2.play(\"storm\")
				if geese == true:
					$Audio/RagingStorm.play()
					
				jumping = false
				$Audio/Step.play()
					
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + 32
				if Cur_HP <= 28:
					projectile.position.y = position.y + 8
				else:
					projectile.position.y = position.y + 16
				projectile.scale.x = -1
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				
				add_sibling(projectile)
				projectile.position.x = position.x - 32
				if Cur_HP <= 28:
					projectile.position.y = position.y + 8
				else:
					projectile.position.y = position.y + 16
				projectile.scale.x = 1
					
				if Cur_HP <= 28:
					statetimer = 2010
				else:
					statetimer = 2030
					
			if statetimer == 2030 and Cur_HP <= 28:
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + 50
				projectile.position.y = position.y + 16
				projectile.scale.x = -1
				
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x - 50
				projectile.position.y = position.y + 16
				projectile.scale.x = 1
				
			if statetimer == 2050 and Cur_HP <= 28:
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + 68
				projectile.position.y = position.y + 24
				projectile.scale.x = -1
				
				projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x - 68
				projectile.position.y = position.y + 24
				projectile.scale.x = 1
				
			if statetimer > 2075:
				state = STATES.IDLE
				if Cur_HP > 28:
					statetimer = 60
				else:
					statetimer = 40
				
			
		if state == STATES.ATTACK3: ##DOUBLE FIN SHREDDER
			lastattack = 3
			statetimer += 1
			if statetimer == 10:
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder3.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * -28)
				projectile.position.y = position.y - 20
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -15
			if (statetimer == 40 and Cur_HP > 28) or (statetimer == 20 and Cur_HP <= 28):
				$Sprite.stop()
				$Sprite.play(\"FinShredder\")
				$Sprite2.play(\"shredder\")
				$Overlay.play(\"FinShredder\")
					
			if (statetimer == 50 and Cur_HP > 28) or (statetimer == 40 and Cur_HP <= 28):
				if projectile != null:
					projectile.queue_free()
					$Audio/Shredder.play()
					projectile = preload(\"res://scenes/objects/bosses/shark_shredder2.tscn\").instantiate()
					add_sibling(projectile)
					projectile.position.x = position.x + ($Sprite.scale.x * 32)
					projectile.position.y = position.y + 6
					projectile.scale.x = -$Sprite.scale.x
					projectile.velocity.x = $Sprite.scale.x * -300
				
				else:
					$Audio/Shredder.play()
					projectile = preload(\"res://scenes/objects/bosses/shark_shredder.tscn\").instantiate()
					add_sibling(projectile)
					projectile.position.x = position.x + ($Sprite.scale.x * 9)
					projectile.position.y = position.y - 20
					projectile.scale.x = -$Sprite.scale.x
					projectile.velocity.x = $Sprite.scale.x * -210
			
			if statetimer == 110 or (statetimer == 90 and Cur_HP <= 28):
				state = STATES.IDLE
				if Cur_HP > 28:
					statetimer = 30
				else:
					statetimer = 30
					
		if state == STATES.ATTACK4: ##SHARK BOOMERANG
			statetimer += 1
			if statetimer < 7:
				turntoplayer()
				jumping = true
			lastattack = 2
			if statetimer == 7:
				$Sprite.play(\"Jump\")
				velocity.x = $Sprite.scale.x * 150
				velocity.y = -80
				
			if statetimer > 10 and  statetimer < 200 and is_on_floor():
				$Sprite.play(\"Crouch\")
				$Sprite2.play(\"crouch\")
				jumping = false
				$Audio/Step.play()
					
				if Cur_HP <= 28:
					statetimer = 210
				else:
					statetimer = 200
					
			if statetimer == 220:
				$Sprite.play(\"Jump\")
				jumping = true
				velocity.y = -280
				floating = true
				
			if statetimer == 230:
				$Sprite.play(\"Boomer1\")
				$Overlay.play(\"Boomer1\")
				
			if statetimer > 230 and statetimer < 290:
				velocity.y *= 0.9
				if velocity.x > -150 and velocity.x < 150:
					velocity.x += $Sprite.scale.x * -8 
					
			if statetimer == 245:
				velocity.y = 0
				if geese == true:
					$Audio/Shippuken.play()
					
				$Sprite.play(\"Boomerang\")
				$Overlay.play(\"Boomer2\")
				$Audio/Boomerang.play()
				
				projectile = preload(\"res://scenes/objects/bosses/shark_boomerang.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x
				projectile.position.y = position.y
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = -$Sprite.scale.x * 140
				projectile.velocity.y = 100
				
				projectile = preload(\"res://scenes/objects/bosses/shark_boomerang.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x
				projectile.position.y = position.y
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = -$Sprite.scale.x * 140
				projectile.velocity.y = 170
					
				
			if statetimer == 258:
				if velocity.x != 0:
					velocity.x *= 0.6
					
			if statetimer == 310 and Cur_HP <= 28:
				turntoplayer()
				$Sprite.play(\"Boomerang\")
				$Overlay.play(\"Boomer2\")
				$Audio/Boomerang.play()
				if geese == true:
					$Audio/Shippuken.play()
				
				projectile = preload(\"res://scenes/objects/bosses/shark_boomerang.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x
				projectile.position.y = position.y
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = -$Sprite.scale.x * 140
				projectile.velocity.y = 100
				
				projectile = preload(\"res://scenes/objects/bosses/shark_boomerang.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x
				projectile.position.y = position.y
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = -$Sprite.scale.x * 140
				projectile.velocity.y = 170
						
			if statetimer == 310:
				floating = false
				if Cur_HP > 28:
					$Sprite.play(\"Jump\")
				else:
					statetimer = 10
					$Sprite.play(\"Jump\")
					$Overlay.play(\"Jump\")
					state = STATES.ATTACK2
			
			if statetimer > 300 and statetimer < 500 and is_on_floor():
				jumping = false
				$Audio/Step.play()
				statetimer = 500
				$Sprite.play(\"Crouch\")
				$Sprite2.play(\"crouch\")
				
			if statetimer > 510: 
				state = STATES.IDLE
				$Sprite2.play(\"none\")
				$Sprite.play(\"Idle\")
				
				if Cur_HP > 28:
					statetimer = 60
				else:
					statetimer = 40
				
				
				
		if state == STATES.ATTACK5: ##FIN SHREDDER 3
			statetimer += 1
			lastattack = 5
			
			if statetimer == 10:
				$Audio/Shredder.play()
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder3.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * 9)
				projectile.position.y = position.y - 20
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -30
			if statetimer == 80 or (statetimer == 70 and Cur_HP <= 28):
				state = STATES.IDLE
			
		if state == STATES.DEAD:
			velocity.x = scale.x * -15
			if deadtick == null:
				deadtick = true
				projectile = preload(\"res://scenes/objects/bosses/boss_death.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position = position
			
			if $Sprite.frame == 6:
				if !exploded:
					$Audio/Death.play()
					for i in 12:
						projectile = preload(\"res://scenes/objects/explosion_player.tscn\").instantiate()
						add_sibling(projectile)
						projectile.position = position
						projectile.velocity = EXPLOSION_SPEEDS[i]
						GameState.bosses.erase(self)
						GameState.bossestokill -= 1
						
							
					exploded = true
				else:
					$Sprite.visible = false
					$hitable/MainHitbox.disabled = true
					$hurt/Hurtbox.disabled = true
					await $Audio/Death.finished
					queue_free()
		
	if flash == true:
		flash = false
	else:
		flash = true
		
	if !$InvulTimer.is_stopped():
		$Sprite.visible = flash
		$Sprite2.visible = flash
		$Overlay.visible = flash
	else:
		$Sprite.visible = true
		$Sprite2.visible = true
		$Overlay.visible = true
		quickhits = 0

func _on_hitable_body_entered(weapon): # needs to be redefined because damage values
	if weapon.W_Type == GameState.DMGTYPE.MD_VIDEO:
		if track2hits == 4:
			track2hits = 0
			Cur_HP -= 1
			$Audio/Damage.play()
		else:
			track2hits += 1
	
	if $InvulTimer.is_stopped() or ((weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI or weapon.W_Type == GameState.DMGTYPE.CR_PUNK or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1) and quickhits < 3) or weapon.W_Type == GameState.DMGTYPE.MD_GUERILLA2:
		if weapon.W_Type != GameState.DMGTYPE.MD_VIDEO:
			#Does it do 0 damage?
			if Dmg_Vals[weapon.W_Type] == 0:
				#For these, have the projectile dissipate.
				if (weapon.W_Type == GameState.DMGTYPE.BS_SHARK or GameState.DMGTYPE.CR_SHARK1 or GameState.DMGTYPE.CR_SHARK2):
					weapon.destroy()
				#For all others, the projectile bounces off. Plink!
				else:
					weapon.reflect()
			#Cool, it does damage!!
			else:
				#Is it Scorch Barrier?
				if (weapon.W_Type == GameState.DMGTYPE.BS_BLAZE) or (weapon.W_Type == GameState.DMGTYPE.CR_BLAZE):
					#For most characters, reduce durability by...
					if GameState.character_selected != 2:
						weapon.durability -= 3
					#Copy robot isn't so lucky...
					else:
						weapon.durability -= 4
				if weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI:
					quickhits += 1
				#Look up the damage type and do damage according to it.
				Cur_HP -= Dmg_Vals[weapon.W_Type]
				$InvulTimer.start(Inv_Vals[weapon.W_Type])
				if weapon.W_Type == GameState.DMGTYPE.CR_BUSTER_1 or weapon.W_Type == GameState.DMGTYPE.CR_BUSTER_3 or weapon.W_Type == GameState.DMGTYPE.CR_SHARK2 or weapon.W_Type == GameState.DMGTYPE.BS_BUSTER:
					if weapon.freezeframed != null:
						$InvulTimer.start(Inv_Vals[weapon.W_Type] * 2)
				$Audio/Damage.play()
				if weapon.W_Type == GameState.DMGTYPE.CB_GUERILLA and Cur_HP >= 0 and state != STATES.WEAKNESS:
					state = STATES.WEAKNESS
					$Sprite.play(\"Dead\")
					statetimer = 0
				
	
				
	if (weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.BS_SHARK or weapon.W_Type == GameState.DMGTYPE.CR_SHARK1 or weapon.W_Type == GameState.DMGTYPE.CR_SHARK2):
		pass
	else:
		weapon.destroy()

	
	if Cur_HP <= 0:
		$Sprite.play(\"Dead\")
		state = STATES.DEAD	
		velocity.y = 0

func _on_hurt_body_entered(body):
	body.DmgQueue = Atk_Dmg
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5nqm8"]

[sub_resource type="AtlasTexture" id="AtlasTexture_xcajq"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wuxfd"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_m3rux"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_u2bmp"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1pxx7"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_pnjh6"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5ce7q"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_yelrv"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kcryo"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_awq20"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_eb5hd"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_uehca"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 512, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ad4po"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8s6ax"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_51r84"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2jr8p"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 448, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_df213"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nq80l"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_23dx2"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kuhyw"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vu5l7"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 384, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_41w2n"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 384, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_df213"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_xcajq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wuxfd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m3rux")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u2bmp")
}],
"loop": false,
"name": &"crouch",
"speed": 13.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_1pxx7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pnjh6")
}],
"loop": true,
"name": &"jump1",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5ce7q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yelrv")
}],
"loop": true,
"name": &"jump2",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_kcryo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_awq20")
}],
"loop": true,
"name": &"jump3",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_eb5hd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uehca")
}],
"loop": true,
"name": &"jump4",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": null
}],
"loop": true,
"name": &"none",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ad4po")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8s6ax")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_51r84")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2jr8p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ad4po")
}],
"loop": false,
"name": &"shredder",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_df213")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nq80l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_23dx2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kuhyw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vu5l7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_41w2n")
}],
"loop": false,
"name": &"storm",
"speed": 10.0
}]

[sub_resource type="AtlasTexture" id="AtlasTexture_do33u"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1u0mv"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jmdv5"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_alwp2"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_amro4"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kwo4k"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rc5qg"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 576, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jw8de"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8obg6"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_u7p8t"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ksd4s"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7t2eh"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_apgux"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5nqm8"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wcioc"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8i4wo"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_dc8yx"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_e0g5f"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_l2mpc"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nbslf"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_db5ic"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_hx1ud"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_0valg"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_4ckbm"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gskut"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_0vh1s"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_waq6m"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ag34h"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2mls6"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_35k07"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xk7ja"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ume3s"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_a0ebh"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_tpw2w"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bkjg2"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_0d283"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ia5qr"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_28ubu"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2xv0j"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6ivuq"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 320, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1jhlc"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 320, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_kwo4k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_do33u")
}],
"loop": true,
"name": &"Boomer1",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_1u0mv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jmdv5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_alwp2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_amro4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_amro4")
}],
"loop": false,
"name": &"Boomerang",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_kwo4k")
}],
"loop": true,
"name": &"Crouch",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}],
"loop": false,
"name": &"Dead",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jw8de")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8obg6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u7p8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ksd4s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ksd4s")
}],
"loop": false,
"name": &"FinShredder",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7t2eh")
}],
"loop": true,
"name": &"Float",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_apgux")
}],
"loop": true,
"name": &"Idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_apgux")
}],
"loop": false,
"name": &"Intro",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wcioc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8i4wo")
}],
"loop": true,
"name": &"Intro1",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_dc8yx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_e0g5f")
}],
"loop": true,
"name": &"Intro2",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_l2mpc")
}],
"loop": true,
"name": &"Jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_nbslf")
}],
"loop": false,
"name": &"RagingStorm",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_db5ic")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hx1ud")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0valg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4ckbm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gskut")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0vh1s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_waq6m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ag34h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2mls6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_35k07")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xk7ja")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ume3s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a0ebh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tpw2w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bkjg2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0d283")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ia5qr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_28ubu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2xv0j")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6ivuq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6ivuq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1jhlc")
}],
"loop": false,
"name": &"Victory",
"speed": 10.0
}]

[sub_resource type="AtlasTexture" id="AtlasTexture_8q7cg"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5mcht"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ivjdh"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_i0dm1"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_md0d1"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bhwkp"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_oqya0"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ynsx1"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ee8ak"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_uk023"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_x2koy"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7poo8"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ljefk"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kg6rs"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7s3ba"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wpe4j"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 64, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_kg6rs"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_8q7cg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5mcht")
}],
"loop": true,
"name": &"Boomer1",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ivjdh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i0dm1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_md0d1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bhwkp")
}, {
"duration": 1.0,
"texture": null
}],
"loop": false,
"name": &"Boomer2",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_oqya0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ynsx1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ee8ak")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uk023")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x2koy")
}, {
"duration": 1.0,
"texture": null
}],
"loop": false,
"name": &"FinShredder",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7poo8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ljefk")
}],
"loop": true,
"name": &"Jump",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": null
}],
"loop": true,
"name": &"None",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_kg6rs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7s3ba")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wpe4j")
}, {
"duration": 1.0,
"texture": null
}],
"loop": false,
"name": &"RagingStorm",
"speed": 8.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wp5vq"]
size = Vector2(23.5, 33)

[node name="Shark Man" type="CharacterBody2D"]
material = SubResource("ShaderMaterial_gtk0d")
collision_layer = 0
script = SubResource("GDScript_k5bra")
barPalette = ExtResource("2_l2mpc")
prebattle = ExtResource("3_nbslf")

[node name="Sprite2" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -15)
sprite_frames = SubResource("SpriteFrames_df213")
animation = &"none"
autoplay = "none"

[node name="Sprite" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -6)
sprite_frames = SubResource("SpriteFrames_kwo4k")
animation = &"Boomer1"
autoplay = "Jump"

[node name="Overlay" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -6)
sprite_frames = SubResource("SpriteFrames_kg6rs")
animation = &"Boomer2"
autoplay = "None"
frame = 4
frame_progress = 1.0

[node name="hitable" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 8

[node name="MainHitbox" type="CollisionShape2D" parent="hitable"]
position = Vector2(-1, -3)
shape = SubResource("RectangleShape2D_wp5vq")

[node name="hurt" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="Hurtbox" type="CollisionShape2D" parent="hurt"]
position = Vector2(-1, -3)
shape = SubResource("RectangleShape2D_wp5vq")
debug_color = Color(1, 0.00392157, 0.0705882, 0.419608)

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2(-1.25, -3.5)
shape = SubResource("RectangleShape2D_wp5vq")
debug_color = Color(0, 1, 0.0705882, 0.419608)

[node name="Timer" type="Timer" parent="."]

[node name="InvulTimer" type="Timer" parent="."]
one_shot = true

[node name="Audio" type="Node" parent="."]

[node name="HPFill" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("3_5nqm8")
volume_db = -10.0

[node name="Damage" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("4_jw8de")

[node name="Death" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("5_8obg6")
volume_db = -16.0
bus = &"SFX"

[node name="Shredder" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("7_jw8de")
bus = &"SFX"

[node name="Boomerang" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("7_5nqm8")
volume_db = 2.5
bus = &"SFX"

[node name="Step" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("9_8obg6")
bus = &"SFX"

[node name="Reppuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("10_u7p8t")
volume_db = 2.8

[node name="DoubleReppuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("11_kwo4k")
volume_db = 2.8

[node name="Shippuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("12_nbslf")
volume_db = 2.8

[node name="RagingStorm" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("13_kg6rs")
volume_db = 2.8

[node name="CeilingDetector" type="RayCast2D" parent="."]
position = Vector2(0, -19)
target_position = Vector2(0, -3)

[connection signal="body_entered" from="hitable" to="." method="_on_hitable_body_entered"]
[connection signal="body_entered" from="hurt" to="." method="_on_hurt_body_entered"]
