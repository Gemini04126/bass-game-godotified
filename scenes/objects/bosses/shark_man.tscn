[gd_scene load_steps=29 format=3 uid="uid://ckdeuge1iatm5"]

[ext_resource type="Shader" uid="uid://b3xb8j1icuyp" path="res://shaders/PaletteSwap.gdshader" id="1_xo4wh"]
[ext_resource type="AudioStream" uid="uid://ctstbffrq85ky" path="res://sounds/bar_fill.wav" id="3_5nqm8"]
[ext_resource type="Texture2D" uid="uid://xwoub3th7bmx" path="res://sprites/enemies/bosses/shark_man.png" id="3_l2mpc"]
[ext_resource type="AudioStream" uid="uid://cojuek45oo3hj" path="res://sounds/playerhurt.wav" id="4_jw8de"]
[ext_resource type="AudioStream" uid="uid://dix6rlhdr84oa" path="res://sounds/mega_death.wav" id="5_8obg6"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gtk0d"]
shader = ExtResource("1_xo4wh")
shader_parameter/skip_first_row = true
shader_parameter/use_palette_alpha = false
shader_parameter/fps = 6.0

[sub_resource type="GDScript" id="GDScript_k5bra"]
script/source = "extends CharacterBody2D

class_name Shark_Man
@onready var projectile
@export var slot : int
var Dmg_Vals = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]
var Inv_Vals = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]
var Atk_Dmg = 4
var flash : bool
var exploded : bool
var Max_HP = 56
var Cur_HP = 0
var blown : bool = false
var quickhits
var state
var track2hits : int
var deadtick

var statetimer
var attacks
var attackpick = 0

var lastattack = 0

enum STATES
{
	SPAWN,
	INTRO,
	IDLE,
	ATTACK1,
	ATTACK2,
	ATTACK3,
	ATTACK4,
	ATTACK5,
	DEAD
}

const EXPLOSION_SPEEDS : Array[Vector2] = [ #G: Hey look, I can actually pretty much just copy what I had for the Genesis version...
# G (but from the Genesis): okay this kind of makes no sense but it also works to help visualize the orbs
								Vector2(0, -150),
		Vector2(-100, -100),						Vector2(100, -100),
								Vector2(0, -50),
	Vector2(-150, 0),	Vector2(-50, 0),	Vector2(50, 0),	Vector2(150, 0),
								Vector2(0, 50),
		Vector2(-100, 100),							Vector2(100, 100),
								Vector2(0, 150)
]

func basedmg():
	#region Damage
	Dmg_Vals[GameState.DMGTYPE.CB_SMOG] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_1] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_2] = 5
	Dmg_Vals[GameState.DMGTYPE.CB_GALE] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_GUERILLA] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_1] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_2] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_3] = 5
	
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK1] = 3
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK2] = 8
	Dmg_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_PUNK] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BALLADE] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT1] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT2] = 1
	
	Dmg_Vals[GameState.DMGTYPE.BS_BUSTER] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_SHARK] = 4
	Dmg_Vals[GameState.DMGTYPE.BS_TREBLE] = 1
	
	Dmg_Vals[GameState.DMGTYPE.MD_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_VIDEO] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 3
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 1
	#endregion
	#region Invul
	Inv_Vals[GameState.DMGTYPE.CB_SMOG] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GALE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GUERILLA] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_3] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BLAZE] = 0.45
	Inv_Vals[GameState.DMGTYPE.CR_SHARK1] = 1
	Inv_Vals[GameState.DMGTYPE.CR_SHARK2] = 2
	Inv_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Inv_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Inv_Vals[GameState.DMGTYPE.CR_PUNK] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BALLADE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT2] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.BS_BUSTER] = 0.5
	Inv_Vals[GameState.DMGTYPE.BS_BLAZE] = 0.35
	Inv_Vals[GameState.DMGTYPE.BS_SHARK] = 1
	Inv_Vals[GameState.DMGTYPE.BS_TREBLE] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.MD_BLAZE] = 1
	Inv_Vals[GameState.DMGTYPE.MD_VIDEO] = 0.75
	Inv_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 0
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA] = 0.65
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 0.65
	#endregion

func _ready():
	basedmg()

func _physics_process(_delta):
	
	if GameState.freezeframe == false:
	
		if !is_on_floor():
			if Cur_HP <= 28:
				velocity.y += 15
			else:
				velocity.y += 9
				
		$Overlay.scale.x = $Sprite.scale.x
			
		if Input.is_action_pressed(\"jump\"):
			attackpick += 1
		
		move_and_slide()
		
		if attackpick < 5:
			attackpick += 1
		else:
			attackpick = 0 
		
		if state == null:
			velocity.y = 80
			if is_on_floor():
				state = STATES.INTRO
				$Sprite.play(\"Intro\")
				
		if state == STATES.INTRO:
			if $Sprite.frame == 3:
				if Cur_HP == Max_HP:
					state = STATES.IDLE
					statetimer = 80
				else:
					Cur_HP += 1
					$Audio/HPFill.play()
		
		if state == STATES.IDLE:
			if GameState.player.position.x < position.x:
				$Sprite.scale.x = 1
			else:
				$Sprite.scale.x = -1
			$Sprite.play(\"Idle\")
			statetimer -= 1
			if statetimer <= 0:
				if attackpick < 2 and lastattack != 1:
					if GameState.droptimer > 3 and Cur_HP <= 28:
						attacks = 5
					elif GameState.droptimer > 3 or Cur_HP <= 28:
						attacks = 4
					else:
						attacks = 3
					state = STATES.ATTACK1
					$Sprite.play(\"FinShredder\")
				
				elif (attackpick == 2 or (attackpick > 3 and (GameState.player.position.x < position.x + 200 or GameState.player.position.x > position.x - 200))) and lastattack != 2:
					state = STATES.ATTACK2
					$Sprite.play(\"Crouch\")
					
				elif (attackpick == 3 or (attackpick > 3 and (GameState.player.position.x > position.x + 200 or GameState.player.position.x < position.x - 200))) and lastattack != 3:
					state = STATES.ATTACK3
					$Sprite.play(\"FinShredder\")
			
		if state == STATES.ATTACK1:
			statetimer += 1
			lastattack = 1
			if (statetimer < 10 or statetimer > 65) and Cur_HP <= 28:
				if GameState.player.position.x < position.x:
					$Sprite.scale.x = 1
				else:
					$Sprite.scale.x = -1
				
			if statetimer == 10:
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder.tscn\").instantiate()
				get_parent().add_child(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * 9)
				projectile.position.y = position.y - 20
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -210
			if statetimer == 80 or (statetimer == 65 and Cur_HP <= 28):
				attacks -= 1
				if attacks == 0:
					state = STATES.IDLE
				else:
					statetimer = 0
					$Sprite.play(\"FinShredder\")
					
		if state == STATES.ATTACK2:
			statetimer += 1
			lastattack = 2
			if statetimer == 10:
				$Sprite.play(\"Jump\")
				velocity.x = (position.x - GameState.player.position.x) * -1
				velocity.y = -280
				if Cur_HP <= 28:
					$Overlay.play(\"Jump\")
					velocity.x = (position.x - GameState.player.position.x) * -1.12
					velocity.y = -315
			if statetimer > 15 and  statetimer < 2000 and is_on_floor():
				$Sprite.play(\"RagingStorm\")
				if Cur_HP <= 28:
					$Sprite.play(\"RagingStorm\")
					$Overlay.play(\"RagingStorm\")
					
					projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
					get_parent().add_child(projectile)
					projectile.position.x = position.x + 32
					projectile.position.y = position.y + 8
					projectile.scale.x = -1
				
					projectile = preload(\"res://scenes/objects/bosses/shark_ragingstorm.tscn\").instantiate()
					get_parent().add_child(projectile)
					projectile.position.x = position.x - 32
					projectile.position.y = position.y + 8
					projectile.scale.x = 1
					
				velocity.x = 0
				if Cur_HP <= 28:
					statetimer = 2010
				else:
					statetimer = 2000
			if statetimer > 2050:
				state = STATES.IDLE
				statetimer = 80
				
			
		if state == STATES.ATTACK3:
			lastattack = 3
			statetimer += 1
			if statetimer == 10:
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder.tscn\").instantiate()
				get_parent().add_child(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * -28)
				projectile.position.y = position.y - 20
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -15
			if (statetimer == 30 and Cur_HP > 28) or (statetimer == 10 and Cur_HP <= 28):
				$Sprite.stop()
				$Sprite.play(\"FinShredder\")
					
			if (statetimer == 70 and Cur_HP > 28) or (statetimer == 50 and Cur_HP <= 28):
				projectile.queue_free()
				projectile = preload(\"res://scenes/objects/bosses/shark_shredder2.tscn\").instantiate()
				get_parent().add_child(projectile)
				projectile.position.x = position.x + ($Sprite.scale.x * 32)
				projectile.position.y = position.y + 3
				projectile.scale.x = -$Sprite.scale.x
				projectile.velocity.x = $Sprite.scale.x * -300
			
			if statetimer == 90 or (statetimer == 80 and Cur_HP <= 28):
				state = STATES.IDLE
				statetimer = 80
			
		if state == STATES.DEAD:
			velocity.x = scale.x * -15
			if deadtick == null:
				deadtick = true
				projectile = preload(\"res://scenes/objects/bosses/boss_death.tscn\").instantiate()
				get_parent().add_child(projectile)
				projectile.position = position
			
			if $Sprite.frame == 6:
				if !exploded:
					$Audio/Death.play()
					for i in 12:
						projectile = preload(\"res://scenes/objects/explosion_player.tscn\").instantiate()
						get_parent().add_child(projectile)
						projectile.position = position
						projectile.velocity = EXPLOSION_SPEEDS[i]
						GameState.bosses.erase(self)
					exploded = true
				else:
					$Sprite.visible = false
					$hitable/MainHitbox.disabled = true
					$hurt/Hurtbox.disabled = true
					await $Audio/Death.finished
					queue_free()
		
	if flash == true:
		flash = false
	else:
		flash = true
		
	if !$InvulTimer.is_stopped():
		$Sprite.visible = flash
	else:
		$Sprite.visible = true
		quickhits = 0

func _on_hitable_body_entered(weapon): # needs to be redefined because damage values
	if weapon.W_Type == GameState.DMGTYPE.MD_VIDEO:
		if track2hits == 4:
			track2hits = 0
			Cur_HP -= 1
			$Audio/Damage.play()
		else:
			track2hits += 1
	
	if $InvulTimer.is_stopped() or ((weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI or weapon.W_Type == GameState.DMGTYPE.CR_PUNK or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1) and quickhits < 3) or weapon.W_Type == GameState.DMGTYPE.MD_GUERILLA2:
		if weapon.W_Type != GameState.DMGTYPE.MD_VIDEO:
			#Does it do 0 damage?
			if Dmg_Vals[weapon.W_Type] == 0:
				#For these, have the projectile dissipate.
				if (weapon.W_Type == GameState.DMGTYPE.BS_SHARK or GameState.DMGTYPE.CR_SHARK1 or GameState.DMGTYPE.CR_SHARK2):
					weapon.destroy()
				#For all others, the projectile bounces off. Plink!
				else:
					weapon.reflect()
			#Cool, it does damage!!
			else:
				#Is it Scorch Barrier?
				if (weapon.W_Type == GameState.DMGTYPE.BS_BLAZE) or (weapon.W_Type == GameState.DMGTYPE.CR_BLAZE):
					#For most characters, reduce durability by...
					if GameState.character_selected != 2:
						weapon.durability -= 3
					#Copy robot isn't so lucky...
					else:
						weapon.durability -= 4
				if weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI:
					quickhits += 1
				#Look up the damage type and do damage according to it.
				Cur_HP -= Dmg_Vals[weapon.W_Type]
				if weapon.freezeframed != null:
					$InvulTimer.start(Inv_Vals[weapon.W_Type] * 2)
				else:
					$InvulTimer.start(Inv_Vals[weapon.W_Type])
				$Audio/Damage.play()
				
	
				
	if (weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.BS_SHARK or weapon.W_Type == GameState.DMGTYPE.CR_SHARK1 or weapon.W_Type == GameState.DMGTYPE.CR_SHARK2):
		pass
	else:
		weapon.destroy()

	
	if Cur_HP <= 0:
		$Sprite.play(\"Dead\")
		state = STATES.DEAD		

func _on_hurt_body_entered(body):
	body.DmgQueue = Atk_Dmg
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5nqm8"]

[sub_resource type="AtlasTexture" id="AtlasTexture_kwo4k"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xo4wh"]
atlas = ExtResource("3_l2mpc")
region = Rect2(576, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jw8de"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8obg6"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_u7p8t"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ksd4s"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7t2eh"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_apgux"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5nqm8"]
atlas = ExtResource("3_l2mpc")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_l2mpc"]
atlas = ExtResource("3_l2mpc")
region = Rect2(64, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_4ckbm"]
atlas = ExtResource("3_l2mpc")
region = Rect2(128, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nbslf"]
atlas = ExtResource("3_l2mpc")
region = Rect2(512, 64, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_kwo4k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_kwo4k")
}],
"loop": true,
"name": &"Crouch",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xo4wh")
}],
"loop": false,
"name": &"Dead",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jw8de")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8obg6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u7p8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ksd4s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7t2eh")
}],
"loop": false,
"name": &"FinShredder",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_apgux")
}],
"loop": true,
"name": &"Idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_apgux")
}],
"loop": false,
"name": &"Intro",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_l2mpc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4ckbm")
}],
"loop": true,
"name": &"Jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_nbslf")
}],
"loop": false,
"name": &"RagingStorm",
"speed": 5.0
}]

[sub_resource type="AtlasTexture" id="AtlasTexture_7poo8"]
atlas = ExtResource("3_l2mpc")
region = Rect2(192, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ljefk"]
atlas = ExtResource("3_l2mpc")
region = Rect2(256, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_kg6rs"]
atlas = ExtResource("3_l2mpc")
region = Rect2(320, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7s3ba"]
atlas = ExtResource("3_l2mpc")
region = Rect2(384, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wpe4j"]
atlas = ExtResource("3_l2mpc")
region = Rect2(448, 64, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_kg6rs"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7poo8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ljefk")
}],
"loop": true,
"name": &"Jump",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": null
}],
"loop": true,
"name": &"None",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_kg6rs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7s3ba")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wpe4j")
}, {
"duration": 1.0,
"texture": null
}],
"loop": false,
"name": &"RagingStorm",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_wp5vq"]
size = Vector2(23.5, 33)

[node name="Shark Man" type="CharacterBody2D"]
material = SubResource("ShaderMaterial_gtk0d")
collision_layer = 0
script = SubResource("GDScript_k5bra")

[node name="Sprite" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -6)
sprite_frames = SubResource("SpriteFrames_kwo4k")
animation = &"Dead"
autoplay = "Jump"

[node name="Overlay" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -6)
sprite_frames = SubResource("SpriteFrames_kg6rs")
animation = &"None"
autoplay = "None"

[node name="hitable" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 8

[node name="MainHitbox" type="CollisionShape2D" parent="hitable"]
position = Vector2(-1, -3)
shape = SubResource("RectangleShape2D_wp5vq")

[node name="hurt" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="Hurtbox" type="CollisionShape2D" parent="hurt"]
position = Vector2(-1, -3)
shape = SubResource("RectangleShape2D_wp5vq")
debug_color = Color(1, 0.00392157, 0.0705882, 0.419608)

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2(-1.25, -3.5)
shape = SubResource("RectangleShape2D_wp5vq")
debug_color = Color(0, 1, 0.0705882, 0.419608)

[node name="Timer" type="Timer" parent="."]

[node name="InvulTimer" type="Timer" parent="."]
wait_time = 0.001
one_shot = true
autostart = true

[node name="Audio" type="Node" parent="."]

[node name="HPFill" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("3_5nqm8")
volume_db = -10.0

[node name="Damage" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("4_jw8de")

[node name="Death" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("5_8obg6")
volume_db = -16.0
bus = &"SFX"

[connection signal="body_entered" from="hitable" to="." method="_on_hitable_body_entered"]
[connection signal="body_entered" from="hurt" to="." method="_on_hurt_body_entered"]
