[gd_scene load_steps=65 format=3 uid="uid://cawh556ks4vby"]

[ext_resource type="Shader" uid="uid://b3xb8j1icuyp" path="res://shaders/PaletteSwap.gdshader" id="1_nqi6c"]
[ext_resource type="Texture2D" uid="uid://b7xssychtw72q" path="res://sprites/hud/bossbarpals/blaze.png" id="2_d3gm3"]
[ext_resource type="Texture2D" uid="uid://c1ucmwbe166sc" path="res://sprites/enemies/bosses/blaze_trans.png" id="3_1cana"]
[ext_resource type="Texture2D" uid="uid://xwoub3th7bmx" path="res://sprites/enemies/bosses/shark_man.png" id="3_nq1ve"]
[ext_resource type="AudioStream" uid="uid://ctstbffrq85ky" path="res://audio/sfx/bar_fill.wav" id="4_1cana"]
[ext_resource type="Texture2D" uid="uid://bfml3lwo6jc0w" path="res://sprites/enemies/bosses/blaze_man.png" id="4_d3gm3"]
[ext_resource type="AudioStream" uid="uid://cojuek45oo3hj" path="res://audio/sfx/player_hurt.wav" id="5_yhebs"]
[ext_resource type="AudioStream" uid="uid://dix6rlhdr84oa" path="res://audio/sfx/mega_death.wav" id="6_2cevd"]
[ext_resource type="AudioStream" uid="uid://bu17jfenhhtt8" path="res://audio/sfx/explode.wav" id="7_iwiwa"]
[ext_resource type="AudioStream" uid="uid://lap56ylqg4a6" path="res://audio/sfx/scythe2.wav" id="8_da0kd"]
[ext_resource type="AudioStream" uid="uid://3orgt2y566i3" path="res://audio/sfx/rm_step.wav" id="9_bqnph"]
[ext_resource type="AudioStream" uid="uid://dbqhptn2q0uk3" path="res://audio/sfx/shark_g1.wav" id="10_mrkjn"]
[ext_resource type="AudioStream" uid="uid://dwyvbh6cxvbmk" path="res://audio/sfx/shark_g2.wav" id="11_7pdk3"]
[ext_resource type="AudioStream" uid="uid://bjcjfg1xjw465" path="res://audio/sfx/shark_g3.wav" id="12_cwskv"]
[ext_resource type="AudioStream" uid="uid://q2a82o1m28d8" path="res://audio/sfx/shark_g4.wav" id="13_il8cv"]

[sub_resource type="GDScript" id="GDScript_k5bra"]
script/source = "extends CharacterBody2D

class_name Blaze_Man
@onready var projectile
@export var slot : int
@export var barPalette : CompressedTexture2D
var fullintro : bool
var Dmg_Vals : Array[float]
var Inv_Vals : Array[float]
var Atk_Dmg = 4
var flash : bool
var exploded : bool
var Max_HP = 56
var Cur_HP = 0
var blown : bool = false
var quickhits
var state
var track2hits : int
var deadtick
var bossesleft
var direction = -1
var attacking : bool = false

var runs : int
var noshieldruns : int
var shields : int = 0

var statetimer
var attacks
var attackpick = 0

var lastattack = 0
var jumping : bool = false
var burning : bool = false

enum STATES
{
	SPAWN,
	INTRO,
	IDLE,
	RUNNING,
	JUMP,
	SKIDDING,
	DASH,
	CAST,
	DEAD,
	WEAKNESS
}

const EXPLOSION_SPEEDS : Array[Vector2] = [ #G: Hey look, I can actually pretty much just copy what I had for the Genesis version...
# G (but from the Genesis): okay this kind of makes no sense but it also works to help visualize the orbs
								Vector2(0, -150),
		Vector2(-100, -100),						Vector2(100, -100),
								Vector2(0, -50),
	Vector2(-150, 0),	Vector2(-50, 0),	Vector2(50, 0),	Vector2(150, 0),
								Vector2(0, 50),
		Vector2(-100, 100),							Vector2(100, 100),
								Vector2(0, 150)
]

func basedmg():
	#region Damage
	Dmg_Vals.resize(GameState.DMGTYPE.size())
	Dmg_Vals[GameState.DMGTYPE.CB_SMOG] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_1] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_REAPER_2] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_GALE] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 1
	Dmg_Vals[GameState.DMGTYPE.CB_GUERILLA] = 0.25
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_1] = 2
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_2] = 3
	Dmg_Vals[GameState.DMGTYPE.CB_PROTO_3] = 5
	
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK1] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_SHARK2] = 12
	Dmg_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Dmg_Vals[GameState.DMGTYPE.CR_PUNK] = 2
	Dmg_Vals[GameState.DMGTYPE.CR_BALLADE] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT1] = 4
	Dmg_Vals[GameState.DMGTYPE.CR_QUINT2] = 1
	
	Dmg_Vals[GameState.DMGTYPE.BS_BUSTER] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_BLAZE] = 1
	Dmg_Vals[GameState.DMGTYPE.BS_SHARK] = 6
	Dmg_Vals[GameState.DMGTYPE.BS_TREBLE] = 1
	
	Dmg_Vals[GameState.DMGTYPE.MD_BLAZE] = 3
	Dmg_Vals[GameState.DMGTYPE.MD_VIDEO] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 3
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA] = 1
	Dmg_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 1
	
	Dmg_Vals[GameState.DMGTYPE.RA_BUSTER] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_GALAXY] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_TOP] = 3
	Dmg_Vals[GameState.DMGTYPE.RA_GEMINI] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_GRENADE] = 0.5
	Dmg_Vals[GameState.DMGTYPE.RA_YAMATO] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_MAGMA] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MAGMA2] = 3
	Dmg_Vals[GameState.DMGTYPE.RA_PHARAOH] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_CHILL] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_CHILL2] = 2
	Dmg_Vals[GameState.DMGTYPE.RA_WIRE] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_TERRA] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MERCURY] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_MARS] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_PLUTO] = 1
	Dmg_Vals[GameState.DMGTYPE.RA_ROSE] = 2 # Maybe?
	#endregion
	#region Invul
	Inv_Vals.resize(GameState.DMGTYPE.size())
	Inv_Vals[GameState.DMGTYPE.CB_SMOG] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_REAPER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GALE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_ORIGAMI] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_GUERILLA] = 0.01
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CB_PROTO_3] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_2] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BUSTER_3] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BLAZE] = 0.45
	Inv_Vals[GameState.DMGTYPE.CR_SHARK1] = 1
	Inv_Vals[GameState.DMGTYPE.CR_SHARK2] = 2
	Inv_Vals[GameState.DMGTYPE.CR_ARROW] = 1
	Inv_Vals[GameState.DMGTYPE.CR_ENKER] = 1
	Inv_Vals[GameState.DMGTYPE.CR_PUNK] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_BALLADE] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT1] = 0.75
	Inv_Vals[GameState.DMGTYPE.CR_QUINT2] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.BS_BUSTER] = 0.35
	Inv_Vals[GameState.DMGTYPE.BS_BLAZE] = 0.35
	Inv_Vals[GameState.DMGTYPE.BS_SHARK] = 1
	Inv_Vals[GameState.DMGTYPE.BS_TREBLE] = 0.75
	
	Inv_Vals[GameState.DMGTYPE.MD_BLAZE] = 1
	Inv_Vals[GameState.DMGTYPE.MD_VIDEO] = 0.75
	Inv_Vals[GameState.DMGTYPE.MD_ORIGAMI] = 0
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA] = 0.65
	Inv_Vals[GameState.DMGTYPE.MD_GUERILLA2] = 0.65
	
	Inv_Vals[GameState.DMGTYPE.RA_BUSTER] = 0.25
	Inv_Vals[GameState.DMGTYPE.RA_GALAXY] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_TOP] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_GEMINI] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_GRENADE] = 0.15
	Inv_Vals[GameState.DMGTYPE.RA_YAMATO] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MAGMA] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_MAGMA2] = 0.35
	Inv_Vals[GameState.DMGTYPE.RA_PHARAOH] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_CHILL] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_CHILL2] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_WIRE] = 0 # it would be really funny to do this
	Inv_Vals[GameState.DMGTYPE.RA_TERRA] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MERCURY] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_MARS] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_PLUTO] = 0.75
	Inv_Vals[GameState.DMGTYPE.RA_ROSE] = 0.75 # Maybe?
	#endregion

func _ready():
	basedmg()

func turntoplayer():
		if GameState.player.position.x < position.x:
			$Sprite.scale.x = 1
		else:
			$Sprite.scale.x = -1

func _physics_process(_delta):
	
	if GameState.freezeframe == false:
	
		if attackpick < 6:
			attackpick += 1
		else:
			attackpick = 0 
		
	
		if !is_on_floor():
			if Cur_HP > 0:
				if Cur_HP <= 28:
					velocity.y += 15
				else:
					velocity.y += 13
					
		
				
			
		if Input.is_action_pressed(\"jump\"):
			attackpick += 1
		
		move_and_slide()
		$Sprite.scale.x = -direction
		
		if state == null:
			velocity.y = 80
			if is_on_floor():
				state = STATES.INTRO
				$Sprite.play(\"Intro\")
				
		if state == STATES.WEAKNESS:
			if statetimer == 0:
				$Sprite.play(\"Dead\")
			if statetimer <= 8:
				statetimer += 1
			if statetimer == 8:
				velocity.y = -650
			if statetimer == 9:
				if $CeilingDetector.is_colliding():
					statetimer += 1
					Cur_HP -= 5
					$Audio/Damage.play()
					$InvulTimer.start(5)
			if statetimer > 9:
				statetimer += 1
					
			if statetimer >= 27:
				if is_on_floor():
					state = STATES.IDLE
					
				
		if state == STATES.INTRO:
			if $Sprite.frame == 3:
				if Cur_HP == Max_HP:
					state = STATES.IDLE
					statetimer = 50
				else:
					Cur_HP += 1
					$Audio/HPFill.play()
					
		if state == STATES.IDLE:
			statetimer += 1
			
			if statetimer >= 27:
				$Sprite.play(\"Run\")
				runs += 1 
				if shields <= 0:
					noshieldruns += 1
				state = STATES.RUNNING
					
		if state == STATES.WEAKNESS:
			if statetimer == 0:
				$Sprite.play(\"Dead\")
			if statetimer <= 8:
				statetimer += 1
			if statetimer == 8:
				velocity.y = -650
			if statetimer == 9:
				if $CeilingDetector.is_colliding():
					statetimer += 1
					Cur_HP -= 5
					$Audio/Damage.play()
					$InvulTimer.start(5)
			if statetimer > 9:
				statetimer += 1
					
			if statetimer >= 27:
				if is_on_floor():
					state = STATES.IDLE
		
		if state == STATES.RUNNING:
			if ($Sprite.frame == 2 or $Sprite.frame == 6) and $Sprite.frame_progress == 0:
				$Audio/Step.play()
			
			velocity.x = direction * 100
			if (direction == 1 and $RightRay.is_colliding()) or (direction == -1 and $LeftRay.is_colliding()):
				direction *= -1
				statetimer = 0
				$Sprite.play(\"Skid\")
				state = STATES.SKIDDING
				if shields <= 0:
					if noshieldruns >= 2:
						runs = 0
						shields = 0
						noshieldruns = 0
						SummonShield()
					noshieldruns += 1
				runs += 1 
				
				
			if shields <= 0 or ($RightProjectile3.is_colliding() and direction == 1) or ($LeftProjectile3.is_colliding() and direction == -1):
				if ($RightProjectile.is_colliding()) or ($LeftProjectile.is_colliding()) or ($RightProjectile2.is_colliding()) or ($LeftProjectile2.is_colliding()) or $RightProjectile3.is_colliding() or $LeftProjectile3.is_colliding() or (($LeftRay2.is_colliding() or $RightRay2.is_colliding()) and shields <= 0):
					statetimer = 0
					state = STATES.JUMP
				
		if state == STATES.JUMP:
			if statetimer == 0:
				$Sprite.play(\"Jump\")
				jumping = true
				velocity.x *= 1.10
				velocity.y = -295
				
			if is_on_floor() and statetimer > 35 and jumping == true:
				$Sprite.play(\"Crouch\")
				jumping = false
				$Audio/Step.play()
				statetimer = 150
				velocity.x *= 0.4
				
			if is_on_floor() and statetimer > 165:
				$Sprite.play(\"Run\")
				state = STATES.RUNNING
				statetimer = 0
			statetimer += 1
				
		if state == STATES.SKIDDING:
			statetimer += 1
			velocity.x *= 0.925
			if statetimer >= 30:
				statetimer = 0
				if attackpick > 4 and shields <= 0 and attacking == false:
					$Sprite.play(\"Dash1\")
					state = STATES.DASH
				elif shields > 0 and (shields < 4 or runs == 5):
						runs = -1
						$Sprite.play(\"Crouch\")
						state = STATES.CAST
				else:
					$Sprite.play(\"Run\")
					$Sprite.material.set_shader_parameter(\"fps\", 0)
					burning = false
					attacking = false
					state = STATES.RUNNING
					
		if state == STATES.CAST:
			statetimer += 1
			
			if statetimer == 10:
				$Sprite.play(\"Jump\")
				velocity.y = -520
				
			if velocity.y > 0 and attacking == false and (position.y > GameState.player.position.y - 32) and (position.y < GameState.player.position.y -18):
				$Sprite.play(\"Cast\")
				velocity.y = 0
				shields = 0
				attacking = true
				
			if statetimer < 1000 and statetimer > 10 and is_on_floor():
				$Sprite.play(\"Crouch\")
				$Audio/Step.play()
				statetimer = 1000
				attacking = true
				
			if statetimer > 1030:
				$Sprite.play(\"Run\")
				burning = false
				attacking = false
				state = STATES.RUNNING
					
				
		if state == STATES.DASH:
			statetimer += 1
			
			if statetimer == 8:
				$Sprite.play(\"Dash2\")
				
			if statetimer == 18:
				$Sprite.material.set_shader_parameter(\"fps\", 30)
				burning = true
				
			
			if statetimer == 30:
				$Sprite.play(\"Dash3\")
				velocity.x = direction * 60
				$hurt/DashHitbox.disabled = false
				$hurt/MainHitbox.disabled = true
				
				
			if statetimer == 40:
				$Sprite.play(\"Dash4\")
				velocity.x = direction * 450
				
			if statetimer == 70:
				$hurt/DashHitbox.disabled = true
				$hurt/MainHitbox.disabled = false
				direction *= -1
				statetimer = 0
				$Sprite.play(\"Skid\")
				velocity.x * 0.5
				state = STATES.SKIDDING
				
			
		
		if state == STATES.DEAD:
			velocity.x = scale.x * -15
			if deadtick == null:
				deadtick = true
				projectile = preload(\"res://scenes/objects/bosses/boss_death.tscn\").instantiate()
				add_sibling(projectile)
				projectile.position = position
			
			if $Sprite.frame == 6:
				if !exploded:
					$Audio/Death.play()
					for i in 12:
						projectile = preload(\"res://scenes/objects/explosion_player.tscn\").instantiate()
						add_sibling(projectile)
						projectile.position = position
						projectile.velocity = EXPLOSION_SPEEDS[i]
						GameState.bosses.erase(self)
						GameState.bossestokill -= 1
						
							
					exploded = true
				else:
					$Sprite.visible = false
					$hitable/MainHitbox.disabled = true
					$hurt/MainHitbox.disabled = true
					$hurt/DashHitbox.disabled = true
					await $Audio/Death.finished
					queue_free()
		
	if flash == true:
		flash = false
	else:
		flash = true
		
	if !$InvulTimer.is_stopped():
		$Sprite.visible = flash
	else:
		$Sprite.visible = true
		quickhits = 0

func _on_hitable_body_entered(weapon): # needs to be redefined because damage values
	if burning == false or weapon.W_Type == GameState.DMGTYPE.CB_GUERILLA or weapon.W_Type == GameState.DMGTYPE.CR_BALLADE or weapon.W_Type == GameState.DMGTYPE.CB_PROTO_3:
		if weapon.W_Type == GameState.DMGTYPE.MD_VIDEO:
			if track2hits == 4:
				track2hits = 0
				Cur_HP -= 1
				$Audio/Damage.play()
			else:
				track2hits += 1
		
		if $InvulTimer.is_stopped() or ((weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI or weapon.W_Type == GameState.DMGTYPE.CR_PUNK or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1) and quickhits < 3) or weapon.W_Type == GameState.DMGTYPE.MD_GUERILLA2:
			if weapon.W_Type != GameState.DMGTYPE.MD_VIDEO:
				#Does it do 0 damage?
				if Dmg_Vals[weapon.W_Type] == 0:
					#For these, have the projectile dissipate.
					if (weapon.W_Type == GameState.DMGTYPE.BS_SHARK or GameState.DMGTYPE.CR_SHARK1 or GameState.DMGTYPE.CR_SHARK2):
						weapon.destroy()
					#For all others, the projectile bounces off. Plink!
					else:
						weapon.reflect()
				#Cool, it does damage!!
				else:
					#Is it Scorch Barrier?
					if (weapon.W_Type == GameState.DMGTYPE.BS_BLAZE) or (weapon.W_Type == GameState.DMGTYPE.CR_BLAZE):
						#For most characters, reduce durability by...
						if GameState.character_selected != 2:
							weapon.durability -= 3
						#Copy robot isn't so lucky...
						else:
							weapon.durability -= 4
					if weapon.W_Type == GameState.DMGTYPE.CB_ORIGAMI:
						quickhits += 1
					#Look up the damage type and do damage according to it.
					Cur_HP -= Dmg_Vals[weapon.W_Type]
					$InvulTimer.start(Inv_Vals[weapon.W_Type])
					if weapon.W_Type == GameState.DMGTYPE.CR_BUSTER_1 or weapon.W_Type == GameState.DMGTYPE.CR_BUSTER_2 or weapon.W_Type == GameState.DMGTYPE.CR_BUSTER_3 or weapon.W_Type == GameState.DMGTYPE.BS_BUSTER:
						if weapon.freezeframed != null:
							$InvulTimer.start(Inv_Vals[weapon.W_Type] * 2)
					$Audio/Damage.play()
					
					
		
					
		if (weapon.W_Type == GameState.DMGTYPE.CB_REAPER_1 or weapon.W_Type == GameState.DMGTYPE.CB_REAPER_2 or weapon.W_Type == GameState.DMGTYPE.BS_SHARK or weapon.W_Type == GameState.DMGTYPE.CR_SHARK1 or weapon.W_Type == GameState.DMGTYPE.CR_SHARK2):
			pass
		else:
			weapon.destroy()
	
		
		if Cur_HP <= 0:
			$Sprite.play(\"Dead\")
			state = STATES.DEAD	
			velocity.y = 0
	else:
		weapon.destroy()
		
func _on_hurt_body_entered(body):
	if burning == false:
		body.DmgQueue = Atk_Dmg
	if burning == true:
		body.DmgQueue = Atk_Dmg + 4


func SummonShield():
	var space = deg_to_rad(360/8)
	var count = 0
	
	
	
	while count < 8:
		projectile = load(\"res://scenes/objects/bosses/blaze_shield.tscn\").instantiate()
		add_sibling(projectile)
		projectile.process_mode = Node.PROCESS_MODE_ALWAYS
		projectile.master = self
		projectile.position = position
		projectile.theta = (count*space)
		shields += 1
		count += 1
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5nqm8"]
shader = ExtResource("1_nqi6c")
shader_parameter/palette = ExtResource("3_1cana")
shader_parameter/skip_first_row = false
shader_parameter/use_palette_alpha = false
shader_parameter/fps = 0.0

[sub_resource type="AtlasTexture" id="AtlasTexture_jmdv5"]
atlas = ExtResource("3_nq1ve")
region = Rect2(128, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_amro4"]
atlas = ExtResource("3_nq1ve")
region = Rect2(192, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1u0mv"]
atlas = ExtResource("3_nq1ve")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bqnph"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_mrkjn"]
atlas = ExtResource("4_d3gm3")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7pdk3"]
atlas = ExtResource("4_d3gm3")
region = Rect2(128, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_cwskv"]
atlas = ExtResource("4_d3gm3")
region = Rect2(192, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_v5y5h"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_3ymqg"]
atlas = ExtResource("4_d3gm3")
region = Rect2(64, 256, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_il8cv"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_xpdfr"]
atlas = ExtResource("4_d3gm3")
region = Rect2(64, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ii20l"]
atlas = ExtResource("4_d3gm3")
region = Rect2(128, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_uvg3u"]
atlas = ExtResource("4_d3gm3")
region = Rect2(192, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_x37ae"]
atlas = ExtResource("4_d3gm3")
region = Rect2(128, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rarh0"]
atlas = ExtResource("4_d3gm3")
region = Rect2(192, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ujmcj"]
atlas = ExtResource("4_d3gm3")
region = Rect2(256, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5rddy"]
atlas = ExtResource("4_d3gm3")
region = Rect2(320, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qe2sh"]
atlas = ExtResource("4_d3gm3")
region = Rect2(384, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_c722j"]
atlas = ExtResource("4_d3gm3")
region = Rect2(448, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_gep1r"]
atlas = ExtResource("4_d3gm3")
region = Rect2(512, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_c2fj5"]
atlas = ExtResource("4_d3gm3")
region = Rect2(448, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_w1n7n"]
atlas = ExtResource("4_d3gm3")
region = Rect2(576, 192, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rc5qg"]
atlas = ExtResource("3_nq1ve")
region = Rect2(576, 576, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_jw8de"]
atlas = ExtResource("3_nq1ve")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_8obg6"]
atlas = ExtResource("3_nq1ve")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_u7p8t"]
atlas = ExtResource("3_nq1ve")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ksd4s"]
atlas = ExtResource("3_nq1ve")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7t2eh"]
atlas = ExtResource("3_nq1ve")
region = Rect2(0, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_alwp2"]
atlas = ExtResource("3_nq1ve")
region = Rect2(64, 128, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_nq1ve"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5nqm8"]
atlas = ExtResource("3_nq1ve")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_apgux"]
atlas = ExtResource("3_nq1ve")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_iwiwa"]
atlas = ExtResource("4_d3gm3")
region = Rect2(576, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_d3gm3"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_1cana"]
atlas = ExtResource("4_d3gm3")
region = Rect2(64, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_yhebs"]
atlas = ExtResource("4_d3gm3")
region = Rect2(128, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_2cevd"]
atlas = ExtResource("4_d3gm3")
region = Rect2(192, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_538tn"]
atlas = ExtResource("4_d3gm3")
region = Rect2(256, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_7v4l0"]
atlas = ExtResource("4_d3gm3")
region = Rect2(320, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vwjxo"]
atlas = ExtResource("4_d3gm3")
region = Rect2(384, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_wnt0s"]
atlas = ExtResource("4_d3gm3")
region = Rect2(448, 64, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_da0kd"]
atlas = ExtResource("4_d3gm3")
region = Rect2(0, 128, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_kwo4k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jmdv5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_amro4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_amro4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_amro4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1u0mv")
}],
"loop": false,
"name": &"Boomerang",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_bqnph")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mrkjn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7pdk3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cwskv")
}],
"loop": false,
"name": &"Cast",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_v5y5h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3ymqg")
}],
"loop": false,
"name": &"Crouch",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_il8cv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xpdfr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ii20l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uvg3u")
}],
"loop": false,
"name": &"Dash1",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_x37ae")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rarh0")
}],
"loop": true,
"name": &"Dash2",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ujmcj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5rddy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qe2sh")
}],
"loop": false,
"name": &"Dash3",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_c722j")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gep1r")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c2fj5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_w1n7n")
}],
"loop": true,
"name": &"Dash4",
"speed": 30.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rc5qg")
}],
"loop": false,
"name": &"Dead",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_jw8de")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8obg6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u7p8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ksd4s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ksd4s")
}],
"loop": false,
"name": &"FinShredder",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7t2eh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_alwp2")
}],
"loop": true,
"name": &"Float",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_nq1ve")
}],
"loop": true,
"name": &"Idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5nqm8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_apgux")
}],
"loop": false,
"name": &"Intro",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_iwiwa")
}],
"loop": true,
"name": &"Jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_d3gm3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1cana")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yhebs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2cevd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_538tn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7v4l0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vwjxo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wnt0s")
}],
"loop": true,
"name": &"Run",
"speed": 15.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_da0kd")
}],
"loop": true,
"name": &"Skid",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_d3gm3"]
size = Vector2(20, 36)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1cana"]
size = Vector2(32, 41)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_c722j"]
size = Vector2(64, 24)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_yhebs"]
size = Vector2(26, 44)

[node name="Blaze Man" type="CharacterBody2D"]
collision_layer = 0
script = SubResource("GDScript_k5bra")
barPalette = ExtResource("2_d3gm3")

[node name="Sprite" type="AnimatedSprite2D" parent="."]
material = SubResource("ShaderMaterial_5nqm8")
position = Vector2(0, -6)
sprite_frames = SubResource("SpriteFrames_kwo4k")
animation = &"Run"
autoplay = "Idle"

[node name="hitable" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 8

[node name="MainHitbox" type="CollisionShape2D" parent="hitable"]
position = Vector2(0, -2)
shape = SubResource("RectangleShape2D_d3gm3")

[node name="hurt" type="Area2D" parent="."]
collision_layer = 4
collision_mask = 2

[node name="MainHitbox" type="CollisionShape2D" parent="hurt"]
position = Vector2(0, -4.5)
shape = SubResource("RectangleShape2D_1cana")
debug_color = Color(1, 0, 0, 0.419608)

[node name="DashHitbox" type="CollisionShape2D" parent="hurt"]
position = Vector2(0, -7)
shape = SubResource("RectangleShape2D_c722j")
disabled = true
debug_color = Color(1, 0, 0, 0.419608)

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2(0, -6)
shape = SubResource("RectangleShape2D_yhebs")
debug_color = Color(0, 1, 0.0705882, 0.419608)

[node name="Timer" type="Timer" parent="."]

[node name="InvulTimer" type="Timer" parent="."]
one_shot = true

[node name="LeftRay" type="RayCast2D" parent="."]
target_position = Vector2(-50, 0)

[node name="LeftRay2" type="RayCast2D" parent="."]
position = Vector2(0, -24)
target_position = Vector2(-49, 0)
collision_mask = 2

[node name="LeftProjectile" type="RayCast2D" parent="."]
position = Vector2(-24, 16)
target_position = Vector2(-95, -39)
collision_mask = 8

[node name="LeftProjectile2" type="RayCast2D" parent="."]
position = Vector2(-24, 16)
target_position = Vector2(0, -44)
collision_mask = 8

[node name="LeftProjectile3" type="RayCast2D" parent="."]
position = Vector2(0, 16)
target_position = Vector2(-100, 0)
collision_mask = 8

[node name="RightRay" type="RayCast2D" parent="."]
target_position = Vector2(50, 0)

[node name="RightRay2" type="RayCast2D" parent="."]
position = Vector2(0, -24)
target_position = Vector2(47, 0)
collision_mask = 2

[node name="RightProjectile" type="RayCast2D" parent="."]
position = Vector2(24, 16)
target_position = Vector2(95, -39)
collision_mask = 8

[node name="RightProjectile2" type="RayCast2D" parent="."]
position = Vector2(24, 16)
target_position = Vector2(0, -44)
collision_mask = 8

[node name="RightProjectile3" type="RayCast2D" parent="."]
position = Vector2(0, 16)
target_position = Vector2(100, 0)
collision_mask = 8

[node name="Audio" type="Node" parent="."]

[node name="HPFill" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("4_1cana")
volume_db = -10.0

[node name="Damage" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("5_yhebs")

[node name="Death" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("6_2cevd")
volume_db = -16.0
bus = &"SFX"

[node name="Shredder" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("7_iwiwa")
bus = &"SFX"

[node name="Boomerang" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("8_da0kd")
volume_db = 2.5
bus = &"SFX"

[node name="Step" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("9_bqnph")
bus = &"SFX"

[node name="Reppuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("10_mrkjn")
volume_db = 2.8

[node name="DoubleReppuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("11_7pdk3")
volume_db = 2.8

[node name="Shippuken" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("12_cwskv")
volume_db = 2.8

[node name="RagingStorm" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("13_il8cv")
volume_db = 2.8

[connection signal="body_entered" from="hitable" to="." method="_on_hitable_body_entered"]
[connection signal="body_entered" from="hurt" to="." method="_on_hurt_body_entered"]
